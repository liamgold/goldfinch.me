<?xml version="1.0" encoding="utf-8"?>
<cms.contentitemcommondata>
  <ContentItemCommonDataContentItemID>
    <CodeName>TheKenticoSaaSMigration_AStep-by-StepGuide-jal13gb7</CodeName>
    <GUID>8d1a9a13-6eab-4168-a02f-c05518c0d907</GUID>
    <ObjectType>cms.contentitem</ObjectType>
  </ContentItemCommonDataContentItemID>
  <ContentItemCommonDataContentLanguageID>
    <CodeName>en</CodeName>
    <GUID>22960170-5c33-4d4e-a01b-fd4c8fcbd13d</GUID>
    <ObjectType>cms.contentlanguage</ObjectType>
  </ContentItemCommonDataContentLanguageID>
  <ContentItemCommonDataFirstPublishedWhen>2025-04-23 18:00:51Z</ContentItemCommonDataFirstPublishedWhen>
  <ContentItemCommonDataGUID>6f85e11c-4d87-4c6c-94dc-d436849ebb1e</ContentItemCommonDataGUID>
  <ContentItemCommonDataIsLatest>True</ContentItemCommonDataIsLatest>
  <ContentItemCommonDataLastPublishedWhen>2025-04-28 23:05:20Z</ContentItemCommonDataLastPublishedWhen>
  <ContentItemCommonDataVersionStatus>2</ContentItemCommonDataVersionStatus>
  <ContentItemCommonDataVisualBuilderWidgets>
    <![CDATA[{"editableAreas":[{"identifier":"BlogPost","sections":[{"identifier":"db80e4d3-72c7-40a7-b9c5-66fd555aa8ae","type":"Kentico.DefaultSection","properties":null,"zones":[{"identifier":"d1ae9246-f6bf-495f-80fc-2780f0972d62","widgets":[{"identifier":"86efc77b-7152-4553-bf46-a38b0e581915","type":"Kentico.Widget.RichText","variants":[{"identifier":"99436957-cb89-4938-9e86-0017b4645284","properties":{"content":"<p>Migrating from a self-hosted setup to Kentico's cloud-native <a href=\"https://www.kentico.com/platforms/xperience-by-kentico/development/saas\" target=\"_blank\" rel=\"noopener noreferrer\">SaaS</a> can unlock real benefits:</p><ul><li>📈 <strong>Easier&nbsp;</strong>scalability</li><li>🛠️ <strong>Reduced&nbsp;</strong>infrastructure maintenance</li><li>💰 <strong>Predictable&nbsp;</strong>pricing</li></ul><p>Since Kentico leverages Microsoft Azure, you also benefit from a highly <strong>sustainable&nbsp;</strong>platform designed for long term growth and minimal environment impact. 🌱</p><p>In this guide, I'll walk you through the step-by-step process of migrating a self-hosted Xperience by Kentico website to Kentico SaaS. This isn't a full production move, it is a trial migration to test and validate the process with minimal risk.</p><p><strong>The Starting Point</strong></p><p>My site currently lives on a Rackspace shared server with other internal&nbsp;<a href=\"https://www.idhlagency.com/\" target=\"_blank\" rel=\"noopener noreferrer\">IDHL</a> projects, while the database is already hosted in Microsoft Azure. This hybrid setup works fine for my blog, but I wanted to explore what it's like to migrate to be fully in the cloud using their SaaS infrastructure.</p><p>The goal of this migration is not to permanently move my website, this is more of a prove it works test. Kentico has kindly provided a Level 1 SaaS instance which has two environments, a non-production (QA) and production (PROD) environment. Kentico supports&nbsp;<a href=\"https://docs.kentico.com/developers-and-admins/saas/saas-overview#where-is-the-saas-service-available\" target=\"_blank\" rel=\"noopener noreferrer\">many regions</a> around the world, but I picked UK South. 🌍</p><p><strong>Before The Move</strong></p><p>Before any SaaS migration, I recommend backing up both the existing database and assets (content hub items and media library). Restoring these locally means you're working with the very latest versions, and ultimately these will be deployed to the SaaS environment.</p><p>At this point, I also run the CI store command to ensure the CI file were up-to-date with the latest database before making any changes:</p>"},"fieldIdentifiers":{"content":"1132dd0d-df6c-466c-bd38-0119557bef7d"}}]},{"identifier":"d54b212a-e797-4679-a079-d9fb8add06a9","type":"Goldfinch.CodeBlockWidget","variants":[{"identifier":"f9fde6c0-ed9d-4388-b066-a469ee3d5c7d","properties":{"language":"bash","code":"dotnet run --no-build --kxp-ci-store"},"fieldIdentifiers":{"language":"ae61ee18-892c-4445-8ed3-8cfac9c36a32","code":"4935c262-f648-4209-bd3e-001d2a543a9f"}}]},{"identifier":"6953fac2-3913-43b7-855f-16c7e6ac9f50","type":"Kentico.Widget.RichText","variants":[{"identifier":"9037a6f0-2381-40ba-8a60-c923f17635a8","properties":{"content":"<p><strong>Code Changes</strong></p><p>With the solution up-to-date and tested, it's time to adapt the solution for a SaaS environment.</p><p>Kentico provides a cloud enabled template which is great when you know you're hosting in SaaS from the start, you can install Kentico with the&nbsp;<strong>--cloud</strong> parameter when initially creating the project. The template includes SaaS specific files, configurations, and NuGet packages. It's all included, ready to go!&nbsp;🎉</p><p>If you're migrating to SaaS, then Kentico does not provide a specific tool or guide, but you can still make use of the cloud enabled template. It really is quite simple! Use the template to create an empty project in a new folder, and merge the changes in. 🧠</p><p>Let's start by creating the empty project:</p>"},"fieldIdentifiers":{"content":"4df66362-93cd-4e1a-bf05-be24ffa96138"}}]},{"identifier":"61a97513-2e1e-45ae-98a2-c04b583c4886","type":"Goldfinch.CodeBlockWidget","variants":[{"identifier":"940e6a29-dee4-41e4-a525-f571542984d5","properties":{"language":"bash","code":"dotnet new kentico-xperience-mvc --cloud -n TestSaaS"},"fieldIdentifiers":{"language":"07c7a8f8-b61e-45c2-bcbe-5ca58c957e50","code":"89fd0a5f-b3c4-46c1-a953-f9829332cf33"}}]},{"identifier":"bc33ad87-b934-4f8d-848e-44d95b206c12","type":"Kentico.Widget.RichText","variants":[{"identifier":"036b5dd2-dc10-456c-ac10-273e9bc41730","properties":{"content":"<p>The first important step is to review the generated <strong>.csproj</strong> file, and check for any NuGet packages that might be missing from your project. In my case, I noticed that I needed to add the following:</p>"},"fieldIdentifiers":{"content":"c1b2da74-57ee-4d18-a393-a6a5fbc8d890"}}]},{"identifier":"72746824-25e1-46c9-a965-36d86a3965b5","type":"Goldfinch.CodeBlockWidget","variants":[{"identifier":"2f8a86fc-261b-4fb5-8790-b8db3a98035b","properties":{"language":"xml","code":"    <PackageReference Include=\"kentico.xperience.azurestorage\" Version=\"30.3.0\" />\n    <PackageReference Include=\"kentico.xperience.cloud\" Version=\"30.3.0\" />"},"fieldIdentifiers":{"language":"faa67748-9978-4bfa-8f98-7ab31465c094","code":"463a0fb2-fdd2-4852-ad10-e83f9e329bd1"}}]},{"identifier":"2397f2e1-ba1c-4d09-9295-635b2a8517c7","type":"Kentico.Widget.RichText","variants":[{"identifier":"9fa0833f-997d-4378-b8f3-36bc3330d25d","properties":{"content":"<p>Next, I came across the&nbsp;<strong>StorageInitializationModule.cs</strong> file which contains sample code for initialising Azure Blob Storage. I made sure to include this in my project!</p><p>The SaaS template also includes a default Continuous Deployment configuration file called <strong>repository.config</strong> located in the <strong>$CDRepository</strong> folder.</p><p>The default configuration lists many object types, I was concerned it might not cover everything from my existing database. To be safe, I cleared the <strong>IncludedObjectTypes</strong> section entirely. This tells the system to include all support object types, which is exactly what I wanted for the initial deployment to SaaS. The resulting file looked much leaner:</p>"},"fieldIdentifiers":{"content":"d379f2e0-eabf-4910-b7ec-74546db8b39e"}}]},{"identifier":"838e11da-fa7c-4d10-9adf-f5003319729c","type":"Goldfinch.CodeBlockWidget","variants":[{"identifier":"d9ddbd21-5f54-42b9-80d0-53f9692a7f5d","properties":{"language":"xml","code":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RepositoryConfiguration xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n\n\t<!-- Specifies which types of object operations are performed in the target database when restoring the repository:\n     Create - only creates new objects. Never deletes or modifies existing objects.\n     CreateUpdate - creates new objects and updates existing objects. Never deletes objects.\n       Full - creates new objects, updates existing objects, deletes objects that do not exist in the repository.\n     -->\n\t<RestoreMode>CreateUpdate</RestoreMode>\n\n\t<!-- After changing the included or excluded object types, you need to run serialization for all objects to bring\n       the repository folder into the required state. Use the CLI and execute the store command for Continuous Integration or Deployment.\n     Always synchronize the repository.config along with the other content of the repository folder. -->\n\n\t<!-- To learn which object types can be used in the IncludedObjectTypes and ExcludedObjectTypes definitions,\n       visit the documentation: https://devnet.kentico.com/CMSPages/DocLinkMapper.ashx?version=xp&link=ci_object_types -->\n\n\t<!-- If one or more main object types are specified, only objects of the given type and their child types are processed.\n       All supported object types are included if empty. -->\n\t<IncludedObjectTypes>\n\t</IncludedObjectTypes>\n\n\t<!-- Excluded object types filter the set of included object types. The specified object types are excluded from processing.\n     May include both main and child object types. -->\n\t<ExcludedObjectTypes>\n\t</ExcludedObjectTypes>\n\n\t<!-- You can exclude objects from processing by adding included or excluded code names for any object type.\n       Use the % wildcard at the start or end of the values to include or exclude multiple objects based on code name prefixes or suffixes.\n       You can add multiple code name values separated by semicolons for each object type. -->\n\t<ObjectFilters>\n\t\t<!-- Ensures serialization for reusable field schemas. -->\n\t\t<IncludedCodeNames ObjectType=\"cms.class\">cms.contentitemcommondata</IncludedCodeNames>\n\t\t<!-- If one or more code names are included, only objects matching the specified code names are included. Other objects are not processed.\n         All objects are included if empty. -->\n\t\t<!-- <IncludedCodeNames>IncludedCodeNameA;IncludedCodeNameB</IncludedCodeNames> -->\n\t\t<!-- <IncludedCodeNames ObjectType=\"ObjectTypeB\">IncludedCodeNamePrefix%;%IncludedCodeNameSuffix</IncludedCodeNames> -->\n\n\t\t<!-- Excludes license key settings -->\n\t\t<ExcludedCodeNames ObjectType=\"cms.settingskey\">CMSInstanceFriendlyName;CMSInstanceID</ExcludedCodeNames>\n\n\t\t<!-- Excluded code names add further filtering for the set of included objects. Objects that match the specified code names are excluded from processing. -->\n\t</ObjectFilters>\n\n</RepositoryConfiguration>"},"fieldIdentifiers":{"language":"96573a77-4225-4f0e-853a-ad251ada8be4","code":"c4d9d958-ca5a-4beb-a257-bea2f510371e"}}]},{"identifier":"a6280991-a8e7-4354-9bbf-b21a119445d8","type":"Kentico.Widget.RichText","variants":[{"identifier":"7ed3be24-4dd2-4aa7-a2c7-167ecf5a1b16","properties":{"content":"<p>The next key file is&nbsp;<strong>Program.cs</strong>, where we need to ensure all the necessary services and middleware are registered to support Kentico SaaS.</p><p>Here's a quick overview of the changes I added:</p>"},"fieldIdentifiers":{"content":"f022634e-95b0-4aaf-8da1-b51eb6d2764e"}}]},{"identifier":"d0c0f37e-3472-4c59-b5e9-d97ce587c1d5","type":"Goldfinch.CodeBlockWidget","variants":[{"identifier":"1dc25378-a3dc-43c2-8924-a5c3430b8ea6","properties":{"language":"csharp","code":"var builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddXperienceCloudApplicationInsights(builder.Configuration);\n\nif (builder.Environment.IsQa() || builder.Environment.IsUat() || builder.Environment.IsProduction() || builder.Environment.IsEnvironment(CloudEnvironments.Custom))\n{\n    builder.Services.AddKenticoCloud(builder.Configuration);\n    builder.Services.AddXperienceCloudSendGrid(builder.Configuration);\n    builder.Services.AddXperienceCloudDataProtection(builder.Configuration);\n}\n\n...\n\nvar app = builder.Build();\n\n...\n\nif (builder.Environment.IsQa() || builder.Environment.IsUat() || builder.Environment.IsProduction() || builder.Environment.IsEnvironment(CloudEnvironments.Custom))\n{\n    app.UseKenticoCloud();\n}"},"fieldIdentifiers":{"language":"b6a4fc60-82cc-4cfb-941c-ccd2f63fe1a6","code":"e615ac30-1d8c-4c11-b3c7-6fb16d9f8132"}}]},{"identifier":"1731c6cb-2748-471f-a066-203917b6ba4c","type":"Kentico.Widget.RichText","variants":[{"identifier":"ccdb9740-a4e2-4a4a-908e-4ecffdc41fd3","properties":{"content":"<p>The next file I updated was&nbsp;<strong>appsettings.json</strong>. This was a simple change, just replacing the existing&nbsp;<strong>CMSHashStringSalt</strong> with the value provided in the Xperience Portal.</p><p>⚠️ But remember...when changing the salt, you need to re-sign the macros to ensure the site functions correctly afterwards.</p><p>You can do this by running the following command:</p>"},"fieldIdentifiers":{"content":"5eb72dc7-01e9-4e37-bfb1-b0c7c026311a"}}]},{"identifier":"de859704-2cf8-4fc3-be0c-adbe402f52f5","type":"Goldfinch.CodeBlockWidget","variants":[{"identifier":"bf14808f-f3e1-4bce-a4fd-3116944d57eb","properties":{"language":"bash","code":"dotnet run --no-build -- --kxp-resign-macros --old-salt \"Old_Salt\" --new-salt \"New_Salt\""},"fieldIdentifiers":{"language":"b11053f0-8e4a-4f5d-8566-df7f0344b479","code":"b26f8a47-197c-4f0e-9759-fb67cebe33ae"}}]},{"identifier":"1fddc070-c1d7-4c5d-8748-9360082fd76c","type":"Kentico.Widget.RichText","variants":[{"identifier":"d909648d-b1fd-4324-9c4c-534fc1e8eec4","properties":{"content":"<p>The final important file is <strong>Export-DeploymentPackage.ps1</strong>. This PowerShell scripts handles the heavy lifting of packaging your solution for deployment to the SaaS environment. It bundles everything together for you, all that's left if to upload the package. 👏</p><p><strong>Before you go running the script</strong>, you need to ensure you've used Continuous Deployment store dotnet command to serialise database objects to the file system.</p>"},"fieldIdentifiers":{"content":"6b739768-970f-4ad1-bec9-b2147c361928"}}]},{"identifier":"44da2f85-480b-49d8-9d32-4c423d8ebc1c","type":"Goldfinch.CodeBlockWidget","variants":[{"identifier":"cc569ab2-b7f8-44f3-a716-04759d8a5e4b","properties":{"language":"bash","code":"dotnet run --no-build -- --kxp-cd-store\n    --repository-path \"C:\\Projects\\Goldfinch.me\\src\\Goldfinch.Web\\`$CDRepository\"\n    --config-path \"C:\\Projects\\Goldfinch.me\\src\\Goldfinch.Web\\App_Data\\CDRepository\\repository.config\""},"fieldIdentifiers":{"language":"bade8e4d-c7b5-4ccb-bc91-09c761a6a8f0","code":"cc34ac41-8cc3-4e4d-8a22-82b8d66e7103"}}]},{"identifier":"1727feb9-68b6-44db-865d-cb6c316673dd","type":"Kentico.Widget.RichText","variants":[{"identifier":"9b00170e-6846-4c90-912c-bd51cafb43c7","properties":{"content":"<p>Now running&nbsp;<strong>Export-DeploymentPackage.ps1</strong> will create a deployment package zip.</p><p><strong>The Xperience Portal</strong></p><p>One of the key differences between self-hosted and SaaS is how you manage channels, in the SaaS world you need to do this in the Xperience Portal.</p><p>So let's go to the Channels and Domains section, and configure the channel for my blog:</p>"},"fieldIdentifiers":{"content":"a1577388-1927-470c-9052-8b8f70b6625d"}}]},{"identifier":"0a723bea-5202-45b3-819e-4a14410db144","type":"Goldfinch.ImageWidget","variants":[{"identifier":"a127943e-8112-450f-8f18-f2e824468ca9","properties":{"selectedAssets":[{"identifier":"4ca6f605-dd7c-4ff1-a394-12073ecf8c03"}]},"fieldIdentifiers":{"selectedAssets":"805afa06-415a-4cf8-bdcd-a826d52ef970"}}]},{"identifier":"e430cade-0c04-472e-9879-f7bbf3f86088","type":"Kentico.Widget.RichText","variants":[{"identifier":"337bd210-be61-4d43-8bbc-8551a4fd991e","properties":{"content":"<p><strong>The Deployment</strong></p><p>Next, head over to the Deployments dashboard in the Xperience Portal. You'll see a QA environment which includes a button to upload your deployment package.</p><p>This lets you upload the package generated by the PowerShell script directly into the SaaS environment.</p>"},"fieldIdentifiers":{"content":"36f5a570-9b3b-4050-a9e7-98912142b3f6"}}]},{"identifier":"e9ec8509-891a-4f79-9dea-cadbf96c50ba","type":"Goldfinch.ImageWidget","variants":[{"identifier":"eedd1e50-ead4-4fe6-a9ff-5ccaafcac317","properties":{"selectedAssets":[{"identifier":"d18a3eca-7e98-46d3-864d-fe42944bfe8d"}]},"fieldIdentifiers":{"selectedAssets":"fdcc7d8e-824a-4803-89ca-87286408dd1d"}}]},{"identifier":"fc16a942-d42a-4620-990e-d92edca5c9be","type":"Kentico.Widget.RichText","variants":[{"identifier":"76f24203-16ec-43ac-b40f-83a4bd04d105","properties":{"content":"<p>I recommend using this method&nbsp;<strong>once&nbsp;</strong><strong>only</strong>. ⚠️</p><p>When should you use it? 🤔</p><p>This is ideal for your initial deployment, a first pass to confirm everything is wired up correctly in SaaS.</p><p>🎉&nbsp;<strong>Congratulations!</strong> Your site is now deployed to the QA environment on SaaS. 👏</p><p>You can now use the&nbsp;<strong>Deploy to</strong> button to promote the same package to the Production environment.</p><p><strong>Coming Next...</strong></p><p>So far, we've proved that a trial migration of a project not originally designed to be cloud-native can be successfully migrated to Kentico SaaS.</p><p>👉 Up next, we'll walk through the changes I made for <a href=\"~/blog/the-kentico-saas-migration-automated-deployments\" target=\"_blank\" rel=\"noopener noreferrer\">automated deployments</a> through Azure DevOps pipelines. This is my recommended alternative to uploading the deployment package directly to the Xperience portal. 💡</p>"},"fieldIdentifiers":{"content":"d14f57a7-32f2-4526-9fe6-0cbeea90f170"}}]}]}],"fieldIdentifiers":{}}]}]}]]>
  </ContentItemCommonDataVisualBuilderWidgets>
  <ContentItemReferences>
    <cms.contentitemreference>
      <ContentItemReferenceGroupGUID>fdcc7d8e-824a-4803-89ca-87286408dd1d</ContentItemReferenceGroupGUID>
      <ContentItemReferenceGUID>f5b5543f-0ee4-454f-964f-4d78197d6101</ContentItemReferenceGUID>
      <ContentItemReferenceSourceCommonDataID>
        <GUID>6f85e11c-4d87-4c6c-94dc-d436849ebb1e</GUID>
        <ObjectType>cms.contentitemcommondata</ObjectType>
      </ContentItemReferenceSourceCommonDataID>
      <ContentItemReferenceTargetItemID>
        <CodeName>SaaSMigration-UploadPackage-ep6yl09s</CodeName>
        <GUID>d18a3eca-7e98-46d3-864d-fe42944bfe8d</GUID>
        <ObjectType>cms.contentitem</ObjectType>
      </ContentItemReferenceTargetItemID>
    </cms.contentitemreference>
    <cms.contentitemreference>
      <ContentItemReferenceGroupGUID>805afa06-415a-4cf8-bdcd-a826d52ef970</ContentItemReferenceGroupGUID>
      <ContentItemReferenceGUID>53a90fe0-fa43-4cc0-86aa-595479916c02</ContentItemReferenceGUID>
      <ContentItemReferenceSourceCommonDataID>
        <GUID>6f85e11c-4d87-4c6c-94dc-d436849ebb1e</GUID>
        <ObjectType>cms.contentitemcommondata</ObjectType>
      </ContentItemReferenceSourceCommonDataID>
      <ContentItemReferenceTargetItemID>
        <CodeName>SaaSMigration-ChannelCreation-y53imigk</CodeName>
        <GUID>4ca6f605-dd7c-4ff1-a394-12073ecf8c03</GUID>
        <ObjectType>cms.contentitem</ObjectType>
      </ContentItemReferenceTargetItemID>
    </cms.contentitemreference>
  </ContentItemReferences>
</cms.contentitemcommondata>