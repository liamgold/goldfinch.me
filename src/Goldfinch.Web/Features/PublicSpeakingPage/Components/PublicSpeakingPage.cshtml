@using Goldfinch.Core.PublicSpeaking
@model PublicSpeakingModel

<section>
    <h1>@Model.Page.DocumentName</h1>
    <div class="introduction">
        <editable-area area-identifier="PublicSpeaking" />
    </div>
</section>

<div class="container mx-auto">
    @foreach (var item in Model.Years)
    {
        <div class="my-16">
            <!-- Enhanced year header -->
            <div class="flex items-center mb-8">
                <h2 class="text-4xl font-bold text-yellow-300 mr-4">
                    @item.Year
                </h2>
                <div class="flex-1 h-px bg-gradient-to-r from-yellow-400/20 to-transparent"></div>
            </div>

            <!-- Enhanced speaking engagement cards grid -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                @foreach (var speakingEvent in item.SpeakingEngagements)
                {
                    <article class="enhanced-card group relative overflow-hidden rounded-xl border border-zinc-800/50 bg-gradient-to-br from-zinc-900/50 to-zinc-950/80 backdrop-blur-sm transition-all duration-300 hover:border-yellow-400/30 hover:shadow-lg hover:shadow-yellow-400/10 hover:-translate-y-1">
                        <div class="p-6">
                            <!-- Date Badge -->
                            <div class="flex items-center justify-between mb-4">
                                <time datetime="@speakingEvent.EventDate.ToString("yyyy-MM-dd")" 
                                      class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-400/10 text-yellow-300 border border-yellow-400/20">
                                    <svg class="w-3 h-3 mr-1.5" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                                    </svg>
                                    @speakingEvent.EventDate.ToString("dd MMM yyyy")
                                </time>

                                @if (!string.IsNullOrWhiteSpace(speakingEvent.RecordingLink))
                                {
                                    <!-- Recording indicator -->
                                    <div class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-400/10 text-green-300 border border-green-400/20">
                                        <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                            <path d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0z"/>
                                            <path d="m6.79 5.093 3.5 2.25a.5.5 0 0 1 0 .814l-3.5 2.25A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .79-.407z"/>
                                        </svg>
                                        Recording
                                    </div>
                                }
                            </div>

                            <!-- Title -->
                            <h3 class="text-xl font-bold text-yellow-300 mb-3 group-hover:text-yellow-200 transition-colors duration-200 leading-tight">
                                @speakingEvent.Title
                            </h3>

                            <!-- Event Details -->
                            <div class="mb-3">
                                <p class="text-yellow-100 font-medium text-sm mb-1">
                                    @speakingEvent.EventName
                                </p>
                                <p class="text-zinc-400 text-sm flex items-center">
                                    <svg class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                                    </svg>
                                    @speakingEvent.EventLocation
                                </p>
                            </div>

                            <!-- Description -->
                            <p class="text-zinc-300 leading-relaxed text-sm mb-4 group-hover:text-zinc-200 transition-colors duration-200">
                                @speakingEvent.Description
                            </p>

                            <!-- Recording Link -->
                            @if (!string.IsNullOrWhiteSpace(speakingEvent.RecordingLink))
                            {
                                <a href="@speakingEvent.RecordingLink" 
                                   target="_blank" 
                                   class="inline-flex items-center px-4 py-2 bg-yellow-400/10 hover:bg-yellow-400/20 border border-yellow-400/20 hover:border-yellow-400/40 rounded-lg text-yellow-300 hover:text-yellow-200 font-medium text-sm transition-all duration-200 group/link">
                                    <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                        <path d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z"/>
                                    </svg>
                                    Watch Recording
                                    <svg class="w-3 h-3 ml-2 transform transition-transform duration-200 group-hover/link:translate-x-0.5" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                    </svg>
                                </a>
                            }
                        </div>

                        <!-- Hover overlay -->
                        <div class="absolute inset-0 bg-gradient-to-br from-yellow-400/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
                    </article>
                }
            </div>
        </div>
    }
</div>